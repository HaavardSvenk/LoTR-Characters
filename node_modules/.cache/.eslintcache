[{"/Users/havardsvenkerud/Desktop/Praksis/app/src/index.tsx":"1","/Users/havardsvenkerud/Desktop/Praksis/app/src/reportWebVitals.ts":"2","/Users/havardsvenkerud/Desktop/Praksis/app/src/App.tsx":"3","/Users/havardsvenkerud/Desktop/Praksis/app/src/components/SearchBar.tsx":"4","/Users/havardsvenkerud/Desktop/Praksis/app/src/components/Table.tsx":"5","/Users/havardsvenkerud/Desktop/Praksis/app/src/components/Checkboxes.tsx":"6"},{"size":483,"mtime":1665241008944,"results":"7","hashOfConfig":"8"},{"size":425,"mtime":1662377657669,"results":"9","hashOfConfig":"8"},{"size":4077,"mtime":1664980952256,"results":"10","hashOfConfig":"8"},{"size":341,"mtime":1665240886990,"results":"11","hashOfConfig":"8"},{"size":1368,"mtime":1664963360891,"results":"12","hashOfConfig":"8"},{"size":372,"mtime":1664968442577,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1p7bw17",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/havardsvenkerud/Desktop/Praksis/app/src/index.tsx",[],[],"/Users/havardsvenkerud/Desktop/Praksis/app/src/reportWebVitals.ts",[],[],[],"/Users/havardsvenkerud/Desktop/Praksis/app/src/App.tsx",["35"],["36"],"import React, { useEffect, useState } from \"react\";\nimport Table from \"./components/Table\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport ReactPaginate from \"react-paginate\";\nimport SearchBar from \"./components/SearchBar\";\nimport Checkboxes from \"./components/Checkboxes\";\n\nconst headers = {\n  Accept: \"application/json\",\n  Authorization: \"Bearer Jd_gpfWUgD1E6rTHJ99Z\",\n};\n\nexport interface iCharacter {\n  id: string;\n  name: string;\n  race: string;\n  gender: string;\n  wikiUrl: string;\n  birth: string;\n}\n\nconst App = () => {\n  const [characters, setCharacters] = useState([] as Array<iCharacter>);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [displayLimit, setDisplayLimit] = useState<number>(10);\n  const [totalCharacters, setTotalCharacters] = useState<number>(0);\n  const [asc, setAsc] = useState<boolean>(true);\n  const [search, setSearch] = useState<string>(\"\");\n  const [url, setUrl] = useState<string>(\n    \"https://the-one-api.dev/v2/character?race=\"\n  );\n\n  useEffect(() => {\n    getCharacters();\n    fetchTotalCharacters(url);\n  }, [displayLimit]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const fetchCharacters = async (currentPage: number, newUrl: string = url) => {\n    const res = await axios.get(\n      `${newUrl}&limit=${displayLimit}&page=${currentPage}`,\n      {\n        headers: headers,\n      }\n    );\n    return (res.data.docs as Array<iCharacter>).sort((a, b) =>\n      a.name > b.name ? 1 : -1\n    );\n  };\n\n  const getCharacters = async () => {\n    setLoading(true);\n    const res = await axios.get(`${url}&limit=${displayLimit}&page=1`, {\n      headers: headers,\n    });\n    setCharacters(\n      (res.data.docs as Array<iCharacter>).sort((a, b) =>\n        a.name > b.name ? 1 : -1\n      )\n    );\n    setLoading(false);\n  };\n\n  const fetchTotalCharacters = async (url: string) => {\n    const res = await axios.get(url, {\n      headers: headers,\n    });\n    setTotalCharacters(res.data.docs.length);\n  };\n\n  const handlePageClick = async (data: { selected: number }) => {\n    let currentPage = data.selected + 1;\n    console.log(data.selected);\n\n    const charactersFromApi = await fetchCharacters(currentPage);\n\n    setCharacters(charactersFromApi);\n    setAsc(true);\n  };\n\n  const handleSortClick = () => {\n    if (!asc) {\n      setCharacters(characters.sort((a, b) => (a.name > b.name ? 1 : -1)));\n    } else {\n      setCharacters(characters.sort((a, b) => (a.name < b.name ? 1 : -1)));\n    }\n    setAsc(!asc);\n  };\n\n  const handleSearchChange = (e: any) => {\n    setSearch(e.target.value);\n  };\n\n  const handleCheckbox = async (e: any) => {\n    if (e.target.checked) {\n      let newUrl = `${url}${e.target.value},`;\n      fetchTotalCharacters(newUrl);\n      setUrl(newUrl);\n      setCharacters(await fetchCharacters(1, newUrl));\n    } else {\n      let newUrl = url.replace(`${e.target.value},`, \"\");\n      fetchTotalCharacters(newUrl);\n      setUrl(newUrl);\n      setCharacters(await fetchCharacters(1, newUrl));\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>LoTR Characters</h1>\n      <SearchBar handleSearchChange={handleSearchChange} />\n      <Checkboxes handleOnClick={handleCheckbox} />\n      <Table\n        characters={characters}\n        loading={loading}\n        handleSortClick={handleSortClick}\n        asc={asc}\n        search={search}\n      />\n      <ReactPaginate\n        pageCount={Math.ceil(totalCharacters / displayLimit)}\n        onPageChange={handlePageClick}\n        previousLabel={\"previous\"}\n        nextLabel={\"next\"}\n        breakLabel={\"...\"}\n        marginPagesDisplayed={2}\n        pageRangeDisplayed={3}\n        containerClassName={\"pagination justify-content-center\"}\n        pageClassName={\"page-item\"}\n        pageLinkClassName={\"page-link\"}\n        previousClassName={\"page-item\"}\n        previousLinkClassName={\"page-link\"}\n        nextClassName={\"page-item\"}\n        nextLinkClassName={\"page-link\"}\n        breakClassName={\"page-item\"}\n        breakLinkClassName={\"page-link\"}\n        activeClassName={\"active\"}\n      />\n    </div>\n  );\n};\n\nexport default App;\n",[],"/Users/havardsvenkerud/Desktop/Praksis/app/src/components/SearchBar.tsx",[],[],"/Users/havardsvenkerud/Desktop/Praksis/app/src/components/Table.tsx",[],[],"/Users/havardsvenkerud/Desktop/Praksis/app/src/components/Checkboxes.tsx",[],[],{"ruleId":"37","severity":1,"message":"38","line":26,"column":24,"nodeType":"39","messageId":"40","endLine":26,"endColumn":39},{"ruleId":"41","severity":1,"message":"42","line":37,"column":6,"nodeType":"43","endLine":37,"endColumn":20,"suggestions":"44","suppressions":"45"},"@typescript-eslint/no-unused-vars","'setDisplayLimit' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getCharacters' and 'url'. Either include them or remove the dependency array.","ArrayExpression",["46"],["47"],{"desc":"48","fix":"49"},{"kind":"50","justification":"51"},"Update the dependencies array to be: [displayLimit, getCharacters, url]",{"range":"52","text":"53"},"directive","",[1074,1088],"[displayLimit, getCharacters, url]"]